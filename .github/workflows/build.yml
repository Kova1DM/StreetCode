name: SonarCloud

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud_pull_request:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Build and test
        run: |
          dotnet build ./Streetcode/Streetcode.sln
          dotnet test ./Streetcode/Streetcode.sln --collect:"XPlat Code Coverage" --logger:trx
      - name: Generate code coverage report
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool
          reportgenerator "-reports:./**/*.trx" "-targetdir:./coveragereport" "-reporttypes:HtmlInline_AzurePipelines"
      - name: SonarCloud Pull Request Analysis
        run: |
          docker run \
            --env SONAR_TOKEN=${{ secrets.SONAR_TOKEN }} \
            --volume "$(pwd):/usr/src" \
            --workdir /usr/src \
            sonarsource/sonar-scanner-cli \
            -Dsonar.organization=ita-social-projects \
            -Dsonar.projectKey=ita-social-projects_StreetCode \
            -Dsonar.pullrequest.key=${{ github.event.pull_request.number }} \
            -Dsonar.pullrequest.branch=${{ github.head_ref }} \
            -Dsonar.pullrequest.base=${{ github.base_ref }} \
            -Dsonar.coverageReportPaths=**/coveragereport/*.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sonarcloud_branch:
    runs-on: ubuntu-latest
    needs: sonarcloud_pull_request
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Build and test
        run: |
          dotnet build ./Streetcode/Streetcode.sln
          dotnet test ./Streetcode/Streetcode.sln --collect:"XPlat Code Coverage" --logger:trx
      - name: Generate code coverage report
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool
          reportgenerator "-reports:./**/*.trx" "-targetdir:./coveragereport" "-reporttypes:HtmlInline_AzurePipelines"
      - name: SonarCloud Branch Analysis
        if: ${{ github.event_name == 'push' && github.ref_type == 'branch' }}
        run: |
          docker run \
            --env SONAR_TOKEN=${{ secrets.SONAR_TOKEN }} \
            --volume "$(pwd):/usr/src" \
            --workdir /usr/src \
            sonarsource/sonar-scanner-cli \
            -Dsonar.organization=ita-social-projects \
            -Dsonar.projectKey=ita-social-projects_StreetCode \
            -Dsonar.coverageReportPaths=**/coveragereport/*.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
